{
  "name": "telnet",
  "description": "Telnet implementation for Node.js",
  "keywords": [
    "telnet"
  ],
  "version": "0.0.1",
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net",
    "url": "http://tootallnate.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/node-telnet.git"
  },
  "main": "./lib/telnet.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "binary": "*",
    "buffers": "*",
    "debug": "*"
  },
  "readme": "node-telnet\n===========\n### Telnet implementation for Node.js\n[![Build Status](https://secure.travis-ci.org/TooTallNate/node-telnet.png)](http://travis-ci.org/TooTallNate/node-telnet)\n\n\nThis module offers an implementation of the [Telnet Protocol (RFC854)][rfc],\nmaking it possible to write a telnet server that can interact with the various\ntelnet features.\n\n### Implemented Options:\n\n| **Name**            | **Event**             |**Specification**\n|:--------------------|:----------------------|:-------------------------\n| Binary transmission | `'transmit binary'`   | [RFC856](http://tools.ietf.org/html/rfc856)\n| Echo                | `'echo'`              | [RFC857](http://tools.ietf.org/html/rfc857)\n| Suppress Go Ahead   | `'suppress go ahead'` | [RFC858](http://tools.ietf.org/html/rfc858)\n| Window Size         | `'window size'`       | [RFC1073](http://tools.ietf.org/html/rfc1073)\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install telnet\n```\n\n\nExamples\n--------\n\n``` js\nvar telnet = require('telnet')\n\ntelnet.createServer(function (client) {\n\n  // make unicode characters work properly\n  client.do.transmit_binary()\n\n  // make the client emit 'window size' events\n  client.do.window_size()\n\n  // listen for the window size events from the client\n  client.on('window size', function (e) {\n    if (e.command === 'sb') {\n      console.log('telnet window resized to %d x %d', e.width, e.height)\n    }\n  })\n\n  // listen for the actual data from the client\n  client.on('data', function (b) {\n    client.write(b)\n  })\n\n  client.write('connected to Telnet server!')\n\n}).listen(23)\n```\n\nAnd then you can connect to your server using `telnet(1)`\n\n``` bash\n$ telnet localhost\nconnected to Telnet server!\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[rfc]: http://tools.ietf.org/html/rfc854\n",
  "readmeFilename": "README.md",
  "_id": "telnet@0.0.1",
  "dist": {
    "shasum": "3f4d7a512373b3d010e1178f95589cabedb3f282"
  },
  "_from": "telnet@",
  "_resolved": "https://registry.npmjs.org/telnet/-/telnet-0.0.1.tgz"
}
